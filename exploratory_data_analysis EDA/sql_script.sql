-- DATABASE EXPLORATION

-- Explore All Objects In The Database
SELECT * FROM INFORMATION_SCHEMA.TABLES

-- Exolore All Columns In The Database
SELECT * FROM INFORMATION_SCHEMA.COLUMNS

-- DIMENSTION EXPLORATION

-- Explore All Countries Our Customers Come From
SELECT DISTINCT country
FROM gold.dim_customers

-- Explore All Categories "The Major Division"
SELECT DISTINCT 
	category, 
	subcategory,
	product_name
FROM gold.dim_products
ORDER BY 1,2,3

-- DATE EXPLORATION

-- Find the date of first and last orders

SELECT 
	MIN(order_date) first_order_date,
	MIN(order_date) last_order_date
FROM gold.fact_sales

-- How many years of sales are available
SELECT 
	DATEDIFF(YEAR,MIN(order_date),MAX(order_date)) AS order_range_year,
	DATEDIFF(MONTH,MIN(order_date),MAX(order_date)) AS order_range_month
FROM gold.fact_sales

-- Find the youngest and oldest customers
SELECT 
	MIN(birthdate) oldest,
	DATEDIFF(YEAR, MIN(birthdate),GETDATE()) oldest_age,
	MAX(birthdate) youngest,
	DATEDIFF(YEAR, MAX(birthdate),GETDATE()) youngest_age
FROM gold.dim_customers

-- MEASURE EXPLORATION

-- Find the total sales
SELECT SUM(sales) Total_Sales
FROM gold.fact_sales

-- Find how many items are sold
SELECT SUM(quantity) Total_Items_Sold
FROM gold.fact_sales

-- Find the average of selling price
SELECT AVG(price) Avg_Selling_Price
FROM gold.fact_sales

-- Find the total number of orders
SELECT COUNT(DISTINCT order_number) Total_Orders
FROM gold.fact_sales

-- Find total number of products
SELECT COUNT(product_key) Total_Products
FROM gold.dim_products

-- Find the total number of customers
SELECT COUNT(*) Total_Customers
FROM gold.dim_customers

-- Find the number of customers that has placed an order
SELECT COUNT(DISTINCT customer_key) Customers_Placed_Orders
FROM gold.fact_sales

-- Generate a report that shows all key metrices of the business
SELECT 'Total Sales' AS Measure_Name,SUM(sales) AS Measure_Value
FROM gold.fact_sales
UNION ALL
SELECT 'Total Items Sold' , SUM(quantity)
FROM gold.fact_sales
UNION ALL
SELECT 'Avg Selling Price',AVG(price) 
FROM gold.fact_sales
UNION ALL
SELECT 'Total Orders',COUNT(DISTINCT order_number) 
FROM gold.fact_sales
UNION  ALL
SELECT 'Total Products',COUNT(product_key) 
FROM gold.dim_products
UNION ALL
SELECT 'Total Customers',COUNT(*) 
FROM gold.dim_customers
UNION ALL
SELECT 'Customers Placed Orders',COUNT(DISTINCT customer_key) 
FROM gold.fact_sales

-- MAGINITUDE

-- Find total customers by countries
SELECT 
	country,
	COUNT(customer_key) total_customers
FROM gold.dim_customers
GROUP BY country
ORDER BY total_customers DESC

-- Find total customers by gender
SELECT 
	gender,
	COUNT(customer_key) total_customers
FROM gold.dim_customers
GROUP BY gender
ORDER BY total_customers DESC

-- Find total products by category
SELECT 
	category,
	COUNT(product_key) total_products
FROM gold.dim_products
GROUP BY category
ORDER BY total_products DESC

-- What is the average costs in each category?
SELECT 
	category,
	AVG(cost) average_cost
FROM gold.dim_products
GROUP BY category
ORDER BY average_cost DESC

-- What is the total revenue generated by each category
SELECT 
	p.category,
	SUM(s.sales) total_revenue
FROM gold.fact_sales s 
LEFT JOIN gold.dim_products p
ON s.product_key = p.product_key
GROUP BY p.category
ORDER BY total_revenue DESC

-- Find total revenue generated by each customers
SELECT 
	T.customer_key,
	first_name + ' ' + last_name AS customer_name,
	total_revenue
FROM (
	SELECT 
		customer_key,
		sum(sales) total_revenue
	FROM gold.fact_sales
	GROUP BY customer_key
) T
LEFT JOIN gold.dim_customers c
ON T.customer_key = c.customer_key
ORDER BY total_revenue DESC

-- What is the distribution of each product item sold across countries
SELECT
	c.country,
	p.product_name,
	SUM(s.quantity) total_items_sold
FROM gold.fact_sales s
LEFT JOIN gold.dim_products p
ON s.product_key = p.product_key
LEFT JOIN gold.dim_customers c
ON s.customer_key = c.customer_key
GROUP BY c.country , p.product_name
ORDER BY c.country , p.product_name , total_items_sold

-- RANKING ANALYSIS

-- Which 5 products generate the highest revenue
SELECT TOP 5
	p.product_name,
	SUM(s.sales) total_revenue
FROM gold.fact_sales s
LEFT JOIN gold.dim_products p
ON s.product_key = p.product_key
GROUP BY p.product_name
ORDER BY total_revenue DESC

-- What are the 5 worst-performing products in term of sales
SELECT TOP 5
	p.product_name,
	SUM(s.sales) total_revenue
FROM gold.fact_sales s
LEFT JOIN gold.dim_products p
ON s.product_key = p.product_key
GROUP BY p.product_name
ORDER BY total_revenue
